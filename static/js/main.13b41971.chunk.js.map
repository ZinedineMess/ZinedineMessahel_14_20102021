{"version":3,"sources":["assets/data/statesOfUSA.jsx","assets/data/departments.jsx","utils/constants.jsx","context/reducers.jsx","context/context.jsx","context/GlobalState.jsx","assets/img/logoHeader.webp","components/MainNavBar/MainNavBar.jsx","assets/img/logoSideNav.webp","assets/img/user.webp","components/SideNavBar/SideNavBar.jsx","components/Nav/Nav.jsx","components/DatePicker/DatePicker.jsx","components/DropDown/DropDown.jsx","components/Input/Input.jsx","components/Form/Form.jsx","pages/CreateEmployee/CreateEmployee.jsx","assets/data/dataTableLabels.jsx","components/DataTable/DataTable.jsx","pages/CurrentEmployee/CurrentEmployee.jsx","router/routes.js","pages/Error/Error.jsx","router/App.js","index.js"],"names":["statesOfUSA","value","label","departments","INITIAL_STATE_EMPLOYEE","firstName","lastName","dateOfBirth","Date","startDate","street","city","state","zipCode","department","ADD_EMPLOYEE","MONTHS","employeeReducer","action","type","employee","updatedList","employeeList","push","addEmployeeToList","React","createContext","list","GlobalState","props","useReducer","listState","dispatch","Provider","children","MainNavBar","className","onClick","toggle","to","src","logoHeader","alt","SideNavBar","showSideBar","e","stopPropagation","logoSideNav","user","role","Nav","useState","displaySideMenu","setDisplaySideMenu","window","addEventListener","CreateDatePicker","YEARS","range","getYear","ariaLabelledBy","inputName","renderCustomHeader","date","changeMonth","changeYear","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisable","disabled","getMonth","onChange","target","indexOf","map","month","year","todayButton","useWeekdaysShort","showPopperArrow","selected","newEmployee","setNewEmployee","DropDown","options","filterOption","createFilter","ignoreAccents","classNamePrefix","Input","id","inputType","name","Form","errorMessage","setErrorMessage","context","useContext","EmployeeContext","useModal","showModal","activeModal","handleOpenModal","handleCloseModal","htmlFor","preventDefault","trim","length","isOpen","close","addCloseOverlay","CreateEmployee","dataTableLabels","text","Table","employees","moment","format","labels","data","CurrentEmployee","routes","path","exact","component","App","route","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAAaA,EAAc,CAAC,CACpBC,MAAO,KACPC,MAAO,UAEX,CACID,MAAO,KACPC,MAAO,WAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,kBAEX,CACID,MAAO,KACPC,MAAO,WAEX,CACID,MAAO,KACPC,MAAO,cAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,eAEX,CACID,MAAO,KACPC,MAAO,wBAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,WAEX,CACID,MAAO,KACPC,MAAO,WAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,UAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,SAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,WAEX,CACID,MAAO,KACPC,MAAO,UAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,aAEX,CACID,MAAO,KACPC,MAAO,iBAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,SAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,aAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,eAEX,CACID,MAAO,KACPC,MAAO,WAEX,CACID,MAAO,KACPC,MAAO,kBAEX,CACID,MAAO,KACPC,MAAO,gBAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,iBAEX,CACID,MAAO,KACPC,MAAO,cAEX,CACID,MAAO,KACPC,MAAO,cAEX,CACID,MAAO,KACPC,MAAO,UAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,QAEX,CACID,MAAO,KACPC,MAAO,YAEX,CACID,MAAO,KACPC,MAAO,UAEX,CACID,MAAO,KACPC,MAAO,gBAEX,CACID,MAAO,KACPC,MAAO,eAEX,CACID,MAAO,KACPC,MAAO,gBAEX,CACID,MAAO,KA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","file":"static/js/main.13b41971.chunk.js","sourcesContent":["export const statesOfUSA = [{\n        value: 'AK',\n        label: 'Alaska'\n    },\n    {\n        value: 'AL',\n        label: 'Alabama'\n    },\n    {\n        value: 'AR',\n        label: 'Arkansas'\n    },\n    {\n        value: 'AS',\n        label: 'American Samoa'\n    },\n    {\n        value: 'AZ',\n        label: 'Arizona'\n    },\n    {\n        value: 'CA',\n        label: 'California'\n    },\n    {\n        value: 'CO',\n        label: 'Colorado'\n    },\n    {\n        value: 'CT',\n        label: 'Connecticut'\n    },\n    {\n        value: 'DC',\n        label: 'District of Columbia'\n    },\n    {\n        value: 'DE',\n        label: 'Delaware'\n    },\n    {\n        value: 'FL',\n        label: 'Florida'\n    },\n    {\n        value: 'GA',\n        label: 'Georgia'\n    },\n    {\n        value: 'GU',\n        label: 'Guam'\n    },\n    {\n        value: 'HI',\n        label: 'Hawaii'\n    },\n    {\n        value: 'IA',\n        label: 'Iowa'\n    },\n    {\n        value: 'ID',\n        label: 'Idaho'\n    },\n    {\n        value: 'IL',\n        label: 'Illinois'\n    },\n    {\n        value: 'IN',\n        label: 'Indiana'\n    },\n    {\n        value: 'KS',\n        label: 'Kansas'\n    },\n    {\n        value: 'KY',\n        label: 'Kentucky'\n    },\n    {\n        value: 'LA',\n        label: 'Louisiana'\n    },\n    {\n        value: 'MA',\n        label: 'Massachusetts'\n    },\n    {\n        value: 'MD',\n        label: 'Maryland'\n    },\n    {\n        value: 'ME',\n        label: 'Maine'\n    },\n    {\n        value: 'MI',\n        label: 'Michigan'\n    },\n    {\n        value: 'MN',\n        label: 'Minnesota'\n    },\n    {\n        value: 'MO',\n        label: 'Missouri'\n    },\n    {\n        value: 'MS',\n        label: 'Mississippi'\n    },\n    {\n        value: 'MT',\n        label: 'Montana'\n    },\n    {\n        value: 'NC',\n        label: 'North Carolina'\n    },\n    {\n        value: 'ND',\n        label: 'North Dakota'\n    },\n    {\n        value: 'NE',\n        label: 'Nebraska'\n    },\n    {\n        value: 'NH',\n        label: 'New Hampshire'\n    },\n    {\n        value: 'NJ',\n        label: 'New Jersey'\n    },\n    {\n        value: 'NM',\n        label: 'New Mexico'\n    },\n    {\n        value: 'NV',\n        label: 'Nevada'\n    },\n    {\n        value: 'NY',\n        label: 'New York'\n    },\n    {\n        value: 'OH',\n        label: 'Ohio'\n    },\n    {\n        value: 'OK',\n        label: 'Oklahoma'\n    },\n    {\n        value: 'OR',\n        label: 'Oregon'\n    },\n    {\n        value: 'PA',\n        label: 'Pennsylvania'\n    },\n    {\n        value: 'PR',\n        label: 'Puerto Rico'\n    },\n    {\n        value: 'RI',\n        label: 'Rhode Island'\n    },\n    {\n        value: 'SC',\n        label: 'South Carolina'\n    },\n    {\n        value: 'SD',\n        label: 'South Dakota'\n    },\n    {\n        value: 'TN',\n        label: 'Tennessee'\n    },\n    {\n        value: 'TX',\n        label: 'Texas'\n    },\n    {\n        value: 'UT',\n        label: 'Utah'\n    },\n    {\n        value: 'VA',\n        label: 'Virginia'\n    },\n    {\n        value: 'VI',\n        label: 'Virgin Islands'\n    },\n    {\n        value: 'VT',\n        label: 'Vermont'\n    },\n    {\n        value: 'WA',\n        label: 'Washington'\n    },\n    {\n        value: 'WI',\n        label: 'Wisconsin'\n    },\n    {\n        value: 'WV',\n        label: 'West Virginia'\n    },\n    {\n        value: 'WY',\n        label: 'Wyoming'\n    }\n]\n","export const departments = [{\n        value: 'sales',\n        label: 'Sales'\n    },\n    {\n        value: 'engineering',\n        label: 'Engineering'\n    },\n    {\n        value: 'hr',\n        label: 'Human Resources'\n    },\n    {\n        value: 'legal',\n        label: 'Legal'\n    }\n]\n","import { statesOfUSA } from 'assets/data/statesOfUSA';\nimport { departments } from 'assets/data/departments';\n\nconst INITIAL_STATE_EMPLOYEE = {\n    firstName: '',\n    lastName: '',\n    dateOfBirth : new Date(),\n    startDate: new Date(),\n    street: '',\n    city: '',\n    state: statesOfUSA[0].label,\n    zipCode: '',\n    department: departments[0].label,\n}\n\nconst ADD_EMPLOYEE = 'ADD_EMPLOYEE';\n\nconst MONTHS = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nexport { \n    INITIAL_STATE_EMPLOYEE, \n    ADD_EMPLOYEE,\n    MONTHS, \n};\n","import { ADD_EMPLOYEE } from 'utils/constants';\n\nconst addEmployeeToList = (employee, state) => {\n    const updatedList = [...state.employeeList];\n    updatedList.push({...employee});\n    return {...state, employeeList: updatedList};\n}\n\nexport const employeeReducer = (state, action) => {\n    switch (action.type) {\n        case ADD_EMPLOYEE:\n            return addEmployeeToList(action.employee, state);\n        default: \n            return state;\n    };\n};\n","import React from 'react';\n\nexport default React.createContext({\n    employee : [],\n    list: [],\n    addEmployeeToList: () => {},\n});\n","import { ADD_EMPLOYEE } from 'utils/constants';\nimport { employeeReducer } from 'context/reducers';\nimport EmployeeContext from 'context/context';\nimport React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nconst GlobalState = props => {\n    const employee = [];\n    const [listState, dispatch] = useReducer(employeeReducer, { employeeList: [] });\n\n    const addEmployeeToList = employee => {\n        dispatch({ type: ADD_EMPLOYEE, employee: employee });\n    };\n\n    return (\n        <EmployeeContext.Provider \n            value = {{\n                employee : employee,\n                list: listState,\n                addEmployeeToList: addEmployeeToList,\n            }}\n        >\n            {props.children}\n        </EmployeeContext.Provider>\n    );\n};\n\nGlobalState.propTypes = {\n    children : PropTypes.object,\n};\n\nexport default GlobalState;\n","export default __webpack_public_path__ + \"static/media/logoHeader.9377b4cb.webp\";","import 'components/MainNavBar/MainNavBar.css'; \nimport { Link } from 'react-router-dom';\nimport logoHeader from 'assets/img/logoHeader.webp';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MainNavBar = props => {    \n    return (\n        <header className='header'>\n            <nav className='mainNavBar'>\n                <i className=\"fas fa-bars navBarIcon\" onClick={props.toggle}></i>\n                <Link to='/'>\n                    <img src={logoHeader} alt='navBarLogo' className='navBarLogo'></img>\n                </Link>\n                <ul className='navBarRight'>\n                    <li className='navBarRightItem'>\n                        <div className='navBarRightLink'>\n                            <i className=\"far fa-comments navBarIcon\"></i>\n                            <span className='badgeMessNotif'>3</span>\n                        </div>\n                    </li>\n                    <li className='navBarRightItem'>\n                        <div className='navBarRightLink'>\n                            <i className=\"far fa-bell navBarIcon\"></i>\n                            <span className='badgeNotif'>15</span>\n                        </div>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nMainNavBar.propTypes = {\n    toggle : PropTypes.func.isRequired,\n};\n\nexport default MainNavBar;\n","export default __webpack_public_path__ + \"static/media/logoSideNav.654a75ac.webp\";","export default __webpack_public_path__ + \"static/media/user.3b87c899.webp\";","import 'components/SideNavBar/SideNavBar.css';\nimport { Link } from 'react-router-dom';\nimport logoSideNav from 'assets/img/logoSideNav.webp';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport user from 'assets/img/user.webp';\n\nconst SideNavBar = props => {\n    return (\n        <div className={`sideBarOverlay ${props.showSideBar ? 'showOverlay' : 'hideOverlay'} `} onClick={props.toggle}>\n            <aside className={`sideBar ${props.showSideBar ? 'showSideBar' : 'hideSideBar'} `} onClick={(e) => e.stopPropagation()}>\n                <Link to='/' className='sideBarHeader'>\n                    <img src={logoSideNav} alt='sideBarLogo' className='sideBarLogo'></img>\n                    <h2 className='sideBarTitle'>HR Net</h2>\n                    <div className='line'/>\n                </Link>\n                <nav className='sideBarMenu'>\n                    <article className='sideBarInfoUser'>\n                        <img src={user} alt='userProfileImage' className='sideBarUserImg'></img>\n                        <Link to='/' className='sideBarUserName'><h3>Clark Kent</h3></Link>\n                    </article>\n                    <br/>\n                    <ul className='sideBarNav' role='menu'>\n                        <li className='sideBarNavItem'>\n                            <Link to='./' className='sideBarNavLink'>\n                                <i className=\"fas fa-user-plus\"></i>\n                                <p>New Employee</p>\n                            </Link>\n                        </li>\n                        <br/>\n                        <div className='line'/>\n                        <li className='sideBarNavItem'>\n                            <Link to='/employee-list' className='sideBarNavLink'>\n                                <i className=\"fas fa-users\"></i>\n                                <p>Employees List</p>\n                            </Link>\n                        </li>\n                    </ul>\n                </nav>\n                <section className='sideNavBarFooter'> \n                    <h2>HRNet © 2021</h2>\n                    <p>All right reserved.</p>\n                    <Link to='/' className='privacyPolicy'>Privacy Policy</Link>\n                </section>\n            </aside>\n        </div>\n    );\n};\n\nSideNavBar.propTypes = {\n    showSideBar : PropTypes.bool.isRequired,\n    toggle : PropTypes.func.isRequired,\n};\n\nexport default SideNavBar;\n","import React, { useState } from 'react';\nimport MainNavBar from 'components/MainNavBar/MainNavBar';\nimport SideNavBar from 'components/SideNavBar/SideNavBar';\n\nconst Nav = () => {\n    const [displaySideMenu, setDisplaySideMenu] = useState(false);\n\n    const toggle = () => {\n        return setDisplaySideMenu(!displaySideMenu);\n    };\n\n    window.addEventListener('wheel', (e) => {\n        if (displaySideMenu) {\n            setDisplaySideMenu(false)\n        }\n    });\n    \n    return (\n        <>\n            <MainNavBar toggle={toggle} />\n            <SideNavBar showSideBar={displaySideMenu} toggle={toggle} />\n        </>\n    );\n};\n\nexport default Nav;\n","import DatePicker from 'react-datepicker';\nimport 'components/DatePicker/DatePicker.css';\nimport { getMonth, getYear } from 'date-fns';\nimport { MONTHS } from 'utils/constants';\nimport PropTypes from 'prop-types';\nimport range from 'lodash/range';\nimport React from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst CreateDatePicker = props => {\n    const YEARS = range(1920, getYear(new Date()) + 1, 1);\n\n    return (\n        <>\n            <DatePicker\n                ariaLabelledBy={props.inputName}\n                renderCustomHeader={({\n                    date,\n                    changeMonth,\n                    changeYear,\n                    decreaseMonth,\n                    increaseMonth,\n                    prevMonthButtonDisabled,\n                    nextMonthButtonDisable,\n                }) => (\n                <div className='date-picker__header'>\n                    <button type='button' onClick={decreaseMonth} disabled={prevMonthButtonDisabled}><i className=\"fas fa-chevron-left\"></i></button>\n                    <select\n                        value={MONTHS[getMonth(date)]}\n                        onChange={({ target: { value } }) => changeMonth(MONTHS.indexOf(value))}>\n                        {MONTHS.map((month) => (\n                            <option key={month} value={month}>\n                                {month}\n                            </option>\n                        ))};\n                    </select>\n                    <select\n                        value={getYear(date)}\n                        onChange={({ target: { value } }) => changeYear(value)}>\n                        {YEARS.map((year) => (\n                            <option key={year} value={year}>\n                                {year}\n                            </option>\n                        ))};\n                    </select>\n                    <button type='button' onClick={increaseMonth} disabled={nextMonthButtonDisable}><i className=\"fas fa-chevron-right\"></i></button>\n                </div>\n            )}\n                todayButton={<i className=\"fas fa-calendar-day\"></i>}\n                useWeekdaysShort={true}\n                showPopperArrow={false}\n                selected={props.newEmployee[props.inputName]}\n                onChange={(date) => {\n                    props.setNewEmployee((state) => ({\n                        ...state,\n                        [props.inputName]: date\n                    }));\n                }}\n            />\n        </>\n    );\n};\n\nCreateDatePicker.propTypes = {\n    newEmployee : PropTypes.object.isRequired,\n    inputName : PropTypes.string.isRequired,\n    setNewEmployee : PropTypes.func.isRequired,\n};\n\nexport default CreateDatePicker;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Select, { createFilter } from 'react-select';\n\nconst DropDown = props => {\n    return (\n        <Select\n            aria-label={props.inputName}\n            aria-haspopup=\"listbox\"\n            className='custom-select'\n            options={props.options}\n            value={{ label: props.newEmployee[props.inputName] }}\n            filterOption={createFilter({ ignoreAccents: false })}\n            classNamePrefix='custom-select'\n            onChange={(e) => {\n                props.setNewEmployee((state) => ({\n                    ...state,\n                    [props.inputName]: e.label\n                }));\n            }}\n        />\n    );\n};\n\nDropDown.propTypes = {\n    options : PropTypes.array.isRequired,\n    newEmployee : PropTypes.object.isRequired,\n    inputName : PropTypes.string.isRequired,\n    setNewEmployee : PropTypes.func.isRequired,\n};\n\nexport default DropDown;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Input = props => {\n    return (\n        <input\n            className='formInput'\n            id={props.inputName}\n            type={props.inputType}\n            name={props.inputName}\n            aria-labelledby={props.inputName}\n            value={props.newEmployee[props.inputName]}\n            onChange={(e) => {\n                props.setNewEmployee((state) => ({\n                    ...state,\n                    [e.target.id]: e.target.value,\n                }));\n            }}\n        />\n    );\n};\n\nInput.propTypes = {\n    inputName : PropTypes.string.isRequired,\n    inputType : PropTypes.string.isRequired,\n    newEmployee : PropTypes.object.isRequired,\n    setNewEmployee : PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import 'components/Form/Form.css'; \nimport CreateDatePicker from 'components/DatePicker/DatePicker';\nimport { departments } from 'assets/data/departments';\nimport DropDown from 'components/DropDown/DropDown';\nimport EmployeeContext from 'context/context';\nimport { INITIAL_STATE_EMPLOYEE } from 'utils/constants';\nimport Input from 'components/Input/Input';\nimport React, { useState, useContext } from 'react';\nimport { statesOfUSA } from 'assets/data/statesOfUSA';\nimport {Modal, useModal} from 'react-top-modal';\nimport { Link } from 'react-router-dom';\n\nconst Form = () => {\n    const [newEmployee, setNewEmployee] = useState(INITIAL_STATE_EMPLOYEE);\n    const [errorMessage, setErrorMessage] = useState('');\n    const context = useContext(EmployeeContext);\n    const { showModal, activeModal, handleOpenModal, handleCloseModal } = useModal();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (\n            newEmployee.firstName.trim().length === 0 ||\n            newEmployee.lastName.trim().length === 0 ||\n            newEmployee.street.trim().length === 0 ||\n            newEmployee.city.trim().length === 0 ||\n            newEmployee.zipCode.trim().length === 0\n            ) {\n            return setErrorMessage('Please fill in all fields');\n        }\n        handleOpenModal('submitModal');\n        setErrorMessage('');\n        context.addEmployeeToList(newEmployee, setErrorMessage);\n        setNewEmployee(INITIAL_STATE_EMPLOYEE);\n    };\n\n    return (\n        <section className='containerWrapper'>\n            <article className='formHeader'>\n                <h1>NEW EMPLOYEE</h1>\n            </article>\n            <span className='lineForm'/>\n            <form action='#' id='createEmployee' className='form'>\n                <fieldset className='fieldSetEmployee'> \n                    <legend>EMPLOYEE</legend> \n                    <article className='formGroup'>\n                        <div className='formGroupItems'>\n                            <label htmlFor='firstName'>First Name</label>\n                            <Input inputType='text' inputName='firstName' newEmployee={newEmployee} setNewEmployee={setNewEmployee} />\n                        </div>\n                        <div className='formGroupItems'>\n                            <label htmlFor='lastName'>Last Name</label>\n                            <Input inputType='text' inputName='lastName' newEmployee={newEmployee} setNewEmployee={setNewEmployee} />\n                        </div>\n                    </article>\n                    <article className='formGroup'>\n                        <div className='formGroupItems'>\n                            <label htmlFor='dateOfBirth'>Date of Birth</label>\n                            <CreateDatePicker inputName='dateOfBirth' newEmployee={newEmployee} setNewEmployee={setNewEmployee} />\n                        </div>\n                        <div className='formGroupItems'>\n                            <label htmlFor='startDate'>Start Date</label>\n                            <CreateDatePicker inputName='startDate' newEmployee={newEmployee} setNewEmployee={setNewEmployee} />\n                        </div>\n                    </article>\n                </fieldset>\n                <fieldset className='fieldSetAddress'>\n                    <legend>ADDRESS</legend> \n                    <article className='formGroup'>\n                        <div className='formGroupItems'>\n                            <label htmlFor='street'>Street</label>\n                            <Input inputType='text' inputName='street' newEmployee={newEmployee} setNewEmployee={setNewEmployee} />\n                        </div>\n                        <div className='formGroupItems'>\n                            <label htmlFor='city'>City</label>\n                            <Input inputType='text' inputName='city' newEmployee={newEmployee} setNewEmployee={setNewEmployee} />\n                        </div>\n                    </article>\n                    <article className='formGroup'>\n                        <div className='formGroupItems'>\n                            <label htmlFor='state'>State</label>\n                            <DropDown inputName='state' options={statesOfUSA} newEmployee={newEmployee} setNewEmployee={setNewEmployee} />\n                        </div>\n                        <div className='formGroupItems'>\n                            <label htmlFor='zipCode'>Zip Code</label>\n                            <Input inputType='number' inputName='zipCode' newEmployee={newEmployee} setNewEmployee={setNewEmployee} />\n                        </div>\n                    </article>\n                </fieldset>\n                <fieldset className='fieldSetDepartment'>\n                    <legend>DEPARTMENT</legend> \n                    <article className='formGroup'>\n                        <div className='formGroupItems'>\n                            <label htmlFor='department'></label>\n                            <DropDown inputName='department' options={departments} newEmployee={newEmployee} setNewEmployee={setNewEmployee} />\n                        </div>\n                    </article>\n                </fieldset>\n                <div className='fieldSetSumbit'>\n                    <article className='formGroup'>\n                        <div className='formSubmitDiv'>\n                            <button type='button' className='buttonDefault' onClick={handleSubmit}>Save</button>\n                            <Modal isOpen={ showModal && activeModal === 'submitModal' } close={handleCloseModal} addCloseOverlay={true}>\n                                <br/>\n                                <h3>The employee has been registered !</h3>\n                                <Link to='/employee-list'>\n                                    <button type='button' className='buttonDefault'>Go to the list</button>\n                                </Link>\n                            </Modal>\n                        </div>\n                    </article>\n                </div>\n                <span className='errorMessage'>{errorMessage}</span>\n            </form>\n        </section>\n    );\n};\n\nexport default Form;\n","import Form from 'components/Form/Form';\nimport React from 'react';\n\nconst CreateEmployee = () => {\n    return (\n        <main>\n            <Form />\n        </main>\n    );\n}\n\nexport default CreateEmployee;\n","export const dataTableLabels = [{\n        text: 'First Name',\n        value: 'firstName'\n    },\n    {\n        text: 'Last Name',\n        value: 'lastName'\n    },\n    {\n        text: 'Date of Birth',\n        value: 'birthdate'\n    },\n    {\n        text: 'Start Date',\n        value: 'startDate'\n    },\n    {\n        text: 'Street',\n        value: 'street'\n    },\n    {\n        text: 'City',\n        value: 'city'\n    },\n    {\n        text: 'State',\n        value: 'state'\n    },\n    {\n        text: 'Zip Code',\n        value: 'zipCode'\n    },\n    {\n        text: 'Department',\n        value: 'department'\n    }\n]\n","import 'components/DataTable/DataTable.css';\nimport DataTables from 'datatables-plugin-react';\nimport { dataTableLabels } from 'assets/data/dataTableLabels';\nimport EmployeeContext from 'context/context';\nimport moment from 'moment';\nimport React, { useContext } from 'react';\n\nconst Table = () => {\n    const context = useContext(EmployeeContext);\n    let employees = context.list.employeeList || [];\n\n    employees = employees.map((employee) => ({\n        ...employee,\n        dateOfBirth: moment(employee.dateOfBirth).format('MM/DD/yyyy'),\n        startDate: moment(employee.startDate).format('MM/DD/yyyy')\n    }));\n\n    return <DataTables labels={dataTableLabels} data={employees} />\n}\n\nexport default Table;\n","import Table from 'components/DataTable/DataTable';\nimport React from 'react';\n\nconst CurrentEmployee = () => {\n    return (\n        <section className='containerWrapper'>\n            <article className='formHeader'>\n                <h1>CURRENT EMPLOYEE</h1>\n            </article>\n            <span className='lineForm'/>\n            <Table />\n        </section>\n    );\n};\n\nexport default CurrentEmployee;\n","import CreateEmployee from 'pages/CreateEmployee/CreateEmployee';\nimport CurrentEmployee from 'pages/CurrentEmployee/CurrentEmployee';\nimport Error from 'pages/Error/Error';\n\nexport const routes = [\n    {\n        path: '/',\n        exact: true,\n        component: CreateEmployee\n    },\n    {\n        path: '/employee-list',\n        exact: true,\n        component: CurrentEmployee\n    },\n    {\n        path: '*',\n        exact: false,\n        component: Error\n    },\n];\n","import React from 'react';\nimport 'pages/Error/Error.css';\n\nconst Error = () => {\n    return (\n        <section className='error'>\n            <h1>404</h1>\n            <h3>We are sorry</h3>\n            <p>Page not found</p>\n        </section>\n    );\n};\n\nexport default Error;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport GlobalState from 'context/GlobalState';\nimport Nav from 'components/Nav/Nav';\nimport React from 'react';\nimport { routes } from 'router/routes';\n\nconst App = () => {\n  return (\n    <GlobalState>\n      <Router>\n          <Nav />\n            <Switch>\n              {routes.map((route, i) => (\n                <Route\n                  key={i}\n                  path={route.path}\n                  exact={route.exact}\n                  component={route.component}\n                />\n              ))}\n            </Switch>\n      </Router>\n    </GlobalState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'router/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}